"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app_components_RealTimeQueueChart_tsx",{

/***/ "(app-pages-browser)/./app/components/RealTimeQueueChart.tsx":
/*!***********************************************!*\
  !*** ./app/components/RealTimeQueueChart.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RealTimeQueueChart)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction RealTimeQueueChart(param) {\n    let { timeRange } = param;\n    _s();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [maxValue, setMaxValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(20);\n    const [showPrediction, setShowPrediction] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Initialize with some historical data based on timeRange\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"RealTimeQueueChart.useEffect\": ()=>{\n            // Generate historical data based on timeRange\n            const newData = [];\n            const now = new Date();\n            const dataPoints = timeRange === 'day' ? 24 : timeRange === 'week' ? 7 : 30;\n            for(let i = dataPoints; i > 0; i--){\n                const date = new Date(now);\n                let timeLabel;\n                if (timeRange === 'day') {\n                    date.setHours(now.getHours() - i);\n                    timeLabel = date.toLocaleTimeString([], {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                    });\n                } else if (timeRange === 'week') {\n                    date.setDate(now.getDate() - i);\n                    timeLabel = date.toLocaleDateString([], {\n                        weekday: 'short'\n                    });\n                } else {\n                    date.setDate(now.getDate() - i);\n                    timeLabel = date.toLocaleDateString([], {\n                        month: 'short',\n                        day: 'numeric'\n                    });\n                }\n                // Generate random historical data\n                const currentWaitTime = Math.floor(Math.random() * 10) + 5;\n                const averageWaitTime = Math.floor(Math.random() * 5) + 10;\n                const predictedWaitTime = Math.floor(Math.random() * 15) + 5;\n                newData.push({\n                    time: timeLabel,\n                    currentWaitTime,\n                    averageWaitTime,\n                    predictedWaitTime\n                });\n            }\n            setData(newData);\n            // Calculate max value for chart scaling\n            const allValues = newData.flatMap({\n                \"RealTimeQueueChart.useEffect.allValues\": (d)=>[\n                        d.currentWaitTime,\n                        d.averageWaitTime,\n                        d.predictedWaitTime || 0\n                    ]\n            }[\"RealTimeQueueChart.useEffect.allValues\"]);\n            const max = Math.max(...allValues);\n            setMaxValue(Math.ceil(max * 1.2)); // Add 20% padding\n        }\n    }[\"RealTimeQueueChart.useEffect\"], [\n        timeRange\n    ]);\n    // Fetch real-time data from API\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"RealTimeQueueChart.useEffect\": ()=>{\n            // Initial fetch\n            fetchQueueData();\n            // Set up polling interval\n            const intervalId = setInterval(fetchQueueData, 5000);\n            return ({\n                \"RealTimeQueueChart.useEffect\": ()=>clearInterval(intervalId)\n            })[\"RealTimeQueueChart.useEffect\"];\n            async function fetchQueueData() {\n                try {\n                    var _queueData_prediction;\n                    const response = await fetch('/api/queue-data');\n                    const queueData = await response.json();\n                    const now = new Date();\n                    let timeLabel;\n                    if (timeRange === 'day') {\n                        timeLabel = now.toLocaleTimeString([], {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                        });\n                    } else if (timeRange === 'week') {\n                        timeLabel = now.toLocaleDateString([], {\n                            weekday: 'short',\n                            hour: '2-digit',\n                            minute: '2-digit'\n                        });\n                    } else {\n                        timeLabel = now.toLocaleDateString([], {\n                            month: 'short',\n                            day: 'numeric'\n                        });\n                    }\n                    setData({\n                        \"RealTimeQueueChart.useEffect.fetchQueueData\": (prevData)=>{\n                            var _queueData_prediction;\n                            const newData = [\n                                ...prevData,\n                                {\n                                    time: timeLabel,\n                                    currentWaitTime: queueData.currentWaitTime,\n                                    averageWaitTime: queueData.averageWaitTime,\n                                    predictedWaitTime: (_queueData_prediction = queueData.prediction) === null || _queueData_prediction === void 0 ? void 0 : _queueData_prediction.estimatedWaitTime\n                                }\n                            ];\n                            // Limit the number of data points\n                            const maxDataPoints = timeRange === 'day' ? 24 : timeRange === 'week' ? 7 : 30;\n                            if (newData.length > maxDataPoints) {\n                                return newData.slice(-maxDataPoints);\n                            }\n                            return newData;\n                        }\n                    }[\"RealTimeQueueChart.useEffect.fetchQueueData\"]);\n                    // Update max value if needed\n                    const maxNewValue = Math.max(queueData.currentWaitTime, queueData.averageWaitTime, ((_queueData_prediction = queueData.prediction) === null || _queueData_prediction === void 0 ? void 0 : _queueData_prediction.estimatedWaitTime) || 0);\n                    setMaxValue({\n                        \"RealTimeQueueChart.useEffect.fetchQueueData\": (prev)=>Math.max(prev, Math.ceil(maxNewValue * 1.2))\n                    }[\"RealTimeQueueChart.useEffect.fetchQueueData\"]);\n                } catch (error) {\n                    console.error('Error fetching queue data:', error);\n                    // Fallback to simulated data if API fails\n                    const now = new Date();\n                    let timeLabel;\n                    if (timeRange === 'day') {\n                        timeLabel = now.toLocaleTimeString([], {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                        });\n                    } else if (timeRange === 'week') {\n                        timeLabel = now.toLocaleDateString([], {\n                            weekday: 'short',\n                            hour: '2-digit',\n                            minute: '2-digit'\n                        });\n                    } else {\n                        timeLabel = now.toLocaleDateString([], {\n                            month: 'short',\n                            day: 'numeric'\n                        });\n                    }\n                    const currentWaitTime = Math.floor(Math.random() * 10) + 5;\n                    const averageWaitTime = Math.floor(Math.random() * 5) + 10;\n                    const predictedWaitTime = Math.floor(Math.random() * 15) + 5;\n                    setData({\n                        \"RealTimeQueueChart.useEffect.fetchQueueData\": (prevData)=>{\n                            const newData = [\n                                ...prevData,\n                                {\n                                    time: timeLabel,\n                                    currentWaitTime,\n                                    averageWaitTime,\n                                    predictedWaitTime\n                                }\n                            ];\n                            // Limit the number of data points\n                            const maxDataPoints = timeRange === 'day' ? 24 : timeRange === 'week' ? 7 : 30;\n                            if (newData.length > maxDataPoints) {\n                                return newData.slice(-maxDataPoints);\n                            }\n                            return newData;\n                        }\n                    }[\"RealTimeQueueChart.useEffect.fetchQueueData\"]);\n                    // Update max value if needed\n                    setMaxValue({\n                        \"RealTimeQueueChart.useEffect.fetchQueueData\": (prev)=>Math.max(prev, Math.ceil(Math.max(currentWaitTime, averageWaitTime, predictedWaitTime) * 1.2))\n                    }[\"RealTimeQueueChart.useEffect.fetchQueueData\"]);\n                }\n            }\n        }\n    }[\"RealTimeQueueChart.useEffect\"], [\n        timeRange\n    ]);\n    // Calculate chart dimensions\n    const chartWidth = 100;\n    const chartHeight = 300;\n    const padding = {\n        top: 20,\n        right: 20,\n        bottom: 40,\n        left: 40\n    };\n    const innerWidth = chartWidth - padding.left - padding.right;\n    const innerHeight = chartHeight - padding.top - padding.bottom;\n    // Calculate scales\n    const xScale = innerWidth / (data.length - 1 || 1);\n    const yScale = innerHeight / maxValue;\n    // Generate path data for the lines\n    const generatePath = (values)=>{\n        return values.map((value, i)=>{\n            const x = i * xScale;\n            const y = innerHeight - value * yScale;\n            return \"\".concat(i === 0 ? 'M' : 'L', \" \").concat(x, \" \").concat(y);\n        }).join(' ');\n    };\n    const currentWaitTimePath = generatePath(data.map((d)=>d.currentWaitTime));\n    const averageWaitTimePath = generatePath(data.map((d)=>d.averageWaitTime));\n    const predictedWaitTimePath = generatePath(data.map((d)=>d.predictedWaitTime || 0));\n    // Generate future prediction path (dashed line extending from current)\n    const generateFuturePath = ()=>{\n        if (data.length < 2) return '';\n        const lastPoint = data[data.length - 1];\n        const lastX = (data.length - 1) * xScale;\n        const lastY = innerHeight - (lastPoint.predictedWaitTime || 0) * yScale;\n        // Create a path that extends 20% into the future\n        const futureX = lastX + xScale * 3;\n        const futureY = innerHeight - (lastPoint.predictedWaitTime || 0) * 1.1 * yScale; // Slight increase\n        return \"M \".concat(lastX, \" \").concat(lastY, \" L \").concat(futureX, \" \").concat(futureY);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            backgroundColor: '#1f2937',\n            padding: '1rem',\n            borderRadius: '0.5rem',\n            color: 'white'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    marginBottom: '1rem'\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        marginBottom: '0.5rem'\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: 'flex',\n                                alignItems: 'center'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        width: '12px',\n                                        height: '12px',\n                                        backgroundColor: '#3b82f6',\n                                        marginRight: '0.5rem',\n                                        borderRadius: '50%'\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 203,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    children: \"Current Wait Time\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 204,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                            lineNumber: 202,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: 'flex',\n                                alignItems: 'center'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        width: '12px',\n                                        height: '12px',\n                                        backgroundColor: '#ef4444',\n                                        marginRight: '0.5rem',\n                                        borderRadius: '50%'\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 207,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    children: \"Average Wait Time\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 208,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                            lineNumber: 206,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: 'flex',\n                                alignItems: 'center'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    style: {\n                                        width: '12px',\n                                        height: '12px',\n                                        backgroundColor: '#10b981',\n                                        marginRight: '0.5rem',\n                                        borderRadius: '50%'\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 211,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    children: \"Predicted Wait Time\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 212,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"checkbox\",\n                                    checked: showPrediction,\n                                    onChange: ()=>setShowPrediction(!showPrediction),\n                                    style: {\n                                        marginLeft: '0.5rem'\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 213,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                            lineNumber: 210,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                    lineNumber: 201,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                lineNumber: 200,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: 'relative',\n                    height: '300px',\n                    width: '100%',\n                    overflow: 'hidden'\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            position: 'absolute',\n                            left: 0,\n                            top: 0,\n                            bottom: 0,\n                            width: '40px',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            justifyContent: 'space-between',\n                            paddingTop: '20px',\n                            paddingBottom: '40px'\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    fontSize: '0.75rem',\n                                    color: '#9ca3af'\n                                },\n                                children: maxValue\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 226,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    fontSize: '0.75rem',\n                                    color: '#9ca3af'\n                                },\n                                children: Math.floor(maxValue * 0.75)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 227,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    fontSize: '0.75rem',\n                                    color: '#9ca3af'\n                                },\n                                children: Math.floor(maxValue * 0.5)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 228,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    fontSize: '0.75rem',\n                                    color: '#9ca3af'\n                                },\n                                children: Math.floor(maxValue * 0.25)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 229,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    fontSize: '0.75rem',\n                                    color: '#9ca3af'\n                                },\n                                children: \"0\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 230,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                        lineNumber: 225,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            position: 'absolute',\n                            left: '40px',\n                            right: '20px',\n                            top: '20px',\n                            bottom: '40px',\n                            borderLeft: '1px solid #4b5563',\n                            borderBottom: '1px solid #4b5563'\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    position: 'absolute',\n                                    left: 0,\n                                    right: 0,\n                                    top: '0%',\n                                    height: '1px',\n                                    backgroundColor: '#4b5563',\n                                    opacity: 0.3\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 236,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    position: 'absolute',\n                                    left: 0,\n                                    right: 0,\n                                    top: '25%',\n                                    height: '1px',\n                                    backgroundColor: '#4b5563',\n                                    opacity: 0.3\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 237,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    position: 'absolute',\n                                    left: 0,\n                                    right: 0,\n                                    top: '50%',\n                                    height: '1px',\n                                    backgroundColor: '#4b5563',\n                                    opacity: 0.3\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 238,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    position: 'absolute',\n                                    left: 0,\n                                    right: 0,\n                                    top: '75%',\n                                    height: '1px',\n                                    backgroundColor: '#4b5563',\n                                    opacity: 0.3\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 239,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                width: \"100%\",\n                                height: \"100%\",\n                                viewBox: \"0 0 \".concat(innerWidth, \" \").concat(innerHeight),\n                                preserveAspectRatio: \"none\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: currentWaitTimePath,\n                                        fill: \"none\",\n                                        stroke: \"#3b82f6\",\n                                        strokeWidth: \"2\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                        lineNumber: 243,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: averageWaitTimePath,\n                                        fill: \"none\",\n                                        stroke: \"#ef4444\",\n                                        strokeWidth: \"2\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                        lineNumber: 244,\n                                        columnNumber: 13\n                                    }, this),\n                                    showPrediction && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: predictedWaitTimePath,\n                                                fill: \"none\",\n                                                stroke: \"#10b981\",\n                                                strokeWidth: \"2\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                                lineNumber: 247,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                d: generateFuturePath(),\n                                                fill: \"none\",\n                                                stroke: \"#10b981\",\n                                                strokeWidth: \"2\",\n                                                strokeDasharray: \"4,4\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                                lineNumber: 248,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 242,\n                                columnNumber: 11\n                            }, this),\n                            data.map((point, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            style: {\n                                                position: 'absolute',\n                                                left: \"\".concat(i / (data.length - 1 || 1) * 100, \"%\"),\n                                                bottom: \"\".concat(point.currentWaitTime / maxValue * 100, \"%\"),\n                                                transform: 'translate(-50%, 50%)',\n                                                width: '6px',\n                                                height: '6px',\n                                                borderRadius: '50%',\n                                                backgroundColor: '#3b82f6'\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                            lineNumber: 256,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            style: {\n                                                position: 'absolute',\n                                                left: \"\".concat(i / (data.length - 1 || 1) * 100, \"%\"),\n                                                bottom: \"\".concat(point.averageWaitTime / maxValue * 100, \"%\"),\n                                                transform: 'translate(-50%, 50%)',\n                                                width: '6px',\n                                                height: '6px',\n                                                borderRadius: '50%',\n                                                backgroundColor: '#ef4444'\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                            lineNumber: 268,\n                                            columnNumber: 15\n                                        }, this),\n                                        showPrediction && point.predictedWaitTime && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            style: {\n                                                position: 'absolute',\n                                                left: \"\".concat(i / (data.length - 1 || 1) * 100, \"%\"),\n                                                bottom: \"\".concat(point.predictedWaitTime / maxValue * 100, \"%\"),\n                                                transform: 'translate(-50%, 50%)',\n                                                width: '6px',\n                                                height: '6px',\n                                                borderRadius: '50%',\n                                                backgroundColor: '#10b981'\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                            lineNumber: 281,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, i, true, {\n                                    fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                    lineNumber: 255,\n                                    columnNumber: 13\n                                }, this))\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                        lineNumber: 234,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            position: 'absolute',\n                            left: '40px',\n                            right: '20px',\n                            bottom: 0,\n                            height: '40px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'flex-start',\n                            paddingTop: '0.5rem'\n                        },\n                        children: data.filter((_, i)=>i % Math.ceil(data.length / 5) === 0 || i === data.length - 1).map((point, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    fontSize: '0.75rem',\n                                    color: '#9ca3af',\n                                    transform: 'rotate(-45deg)',\n                                    transformOrigin: 'top left',\n                                    whiteSpace: 'nowrap'\n                                },\n                                children: point.time\n                            }, i, false, {\n                                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                                lineNumber: 301,\n                                columnNumber: 13\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                        lineNumber: 299,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                lineNumber: 223,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    marginTop: '1rem',\n                    fontSize: '0.875rem',\n                    color: '#9ca3af',\n                    textAlign: 'center'\n                },\n                children: \"Real-time queue data with AI-powered predictions\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n                lineNumber: 308,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Hackathon\\\\Hackspire\\\\app\\\\components\\\\RealTimeQueueChart.tsx\",\n        lineNumber: 194,\n        columnNumber: 5\n    }, this);\n}\n_s(RealTimeQueueChart, \"nwr0+ebpkOJQSJOau2xa7tIvTh4=\");\n_c = RealTimeQueueChart;\nvar _c;\n$RefreshReg$(_c, \"RealTimeQueueChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/RealTimeQueueChart.tsx\n"));

/***/ })

});